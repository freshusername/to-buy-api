#### Define stage list

stages:
 - build
 - test
 - deploy

build:
  image: docker:stable
  stage: build
  services:
    - docker:dind
  before_script:
    - docker info
    - docker login ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  script:
    - ls
    - docker build build --progress=plain --build-arg UI_HOST=$UI_HOST --build-arg DB_HOST=$DB_HOST -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest ./
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  after_script:
    - docker logout ${CI_REGISTRY}
  tags:
    - docker

test:
  image: golang:1.20.1
  services:
    - docker:dind
  stage: test
  script:
    - "go test -v -cover ./..."
    #- docker run $(docker build -f Dockerfile.test -q ./)     

deploy:
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker info
  stage: deploy
  script:
    - docker login ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
    - docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
    - docker stop to-buy-api || true && docker rm to-buy-api || true
    - docker run -dp 3000:3000 --env DB_HOST=${DB_HOST} --env UI_HOST=${UI_HOST} --name to-buy-api ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  after_script:
    - docker logout ${CI_REGISTRY}
  environment:
    name: production
  only:
    - main
